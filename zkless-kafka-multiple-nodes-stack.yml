#  Copyright 2023 The original authors
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at

#  http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
version: '3.8'
services:
  grafana:
    image: "grafana/grafana:${GRAFANA_VERSION}"
    ports:
     - "3000:3000"
    environment:
      GF_PATHS_DATA : /var/lib/grafana
      GF_SECURITY_ADMIN_PASSWORD : kafka
    volumes:
     - ./grafana/provisioning:/etc/grafana/provisioning
     - ./grafana/dashboards:/var/lib/grafana/dashboards
    container_name: grafana
    depends_on:
     - prometheus
    networks:
      - kafka-platform

  prometheus:
    image: "prom/prometheus:${PROMETHEUS_VERSION}"
    ports:
     - "9090:9090"
    volumes:
     - ./etc/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command: "--config.file=/etc/prometheus/prometheus.yml"
    container_name: prometheus
    networks:
      - kafka-platform

  jmx-kafka101:
    image: "sscaling/jmx-prometheus-exporter"
    ports:
     - "5556:5556"
    environment:
     CONFIG_YML : "/etc/jmx_exporter/config.yml"
     JVM_OPTS: ${PROMETHEUS_JMX_AGENT_JVM_OPTS}
    volumes:
     - ./etc/jmx_exporter/config_kafka101.yml:/etc/jmx_exporter/config.yml
    container_name: jmx-kafka101
    depends_on:
     - kafka101
    networks:
      - kafka-platform

  jmx-kafka102:
    image: "sscaling/jmx-prometheus-exporter"
    ports:
     - "5557:5556"
    environment:
     CONFIG_YML : "/etc/jmx_exporter/config.yml"
     JVM_OPTS: ${PROMETHEUS_JMX_AGENT_JVM_OPTS}

    volumes:
     - ./etc/jmx_exporter/config_kafka102.yml:/etc/jmx_exporter/config.yml
    container_name: jmx-kafka102
    depends_on:
     - kafka102
    networks:
      - kafka-platform

  jmx-kafka103:
    image: "sscaling/jmx-prometheus-exporter"
    ports:
     - "5558:5556"
    environment:
     CONFIG_YML : "/etc/jmx_exporter/config.yml"
     JVM_OPTS: ${PROMETHEUS_JMX_AGENT_JVM_OPTS}
    volumes:
     - ./etc/jmx_exporter/config_kafka103.yml:/etc/jmx_exporter/config.yml
    container_name: jmx-kafka103
    depends_on:
     - kafka103
    networks:
      - kafka-platform

  kafka101:
    image: "confluentinc/cp-kafka:${CONFLUENT_VERSION}"
    ports:
      - "9092:9092"
      - "9991:9991"
    container_name: kafka101
    environment:
      KAFKA_NODE_ID: 101
      # random cluster ID used for formatting LOG_DIR for KRaft
      CLUSTER_ID: 'xtzWWN4bTjitpL3kfd9s5g'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '101@kafka101:29093,102@kafka102:29093,103@kafka103:29093'
      KAFKA_PROCESS_ROLES: 'broker,controller' 
      KAFKA_JMX_PORT: 9991
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka101:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka101:29092,PLAINTEXT_HOST://0.0.0.0:9092,CONTROLLER://kafka101:29093'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka101:29092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'false'
      KAFKA_HEAP_OPTS: ${KAFKA_BROKER_HEAP_OPTS}
    deploy:
      resources:
        limits:
          memory: ${KAFKA_BROKER_MEM_LIMIT}
    networks:
      - kafka-platform

  kafka102:
    image: "confluentinc/cp-kafka:${CONFLUENT_VERSION}"
    ports:
      - "9093:9093"
      - "9992:9992"
    container_name: kafka102
    environment:
      KAFKA_NODE_ID: 102
      # random cluster ID used for formatting LOG_DIR for KRaft
      CLUSTER_ID: 'xtzWWN4bTjitpL3kfd9s5g'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '101@kafka101:29093,102@kafka102:29093,103@kafka103:29093'
      KAFKA_PROCESS_ROLES: 'broker,controller' 
      KAFKA_JMX_PORT: 9992
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka102:29092,PLAINTEXT_HOST://localhost:9093'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka102:29092,PLAINTEXT_HOST://0.0.0.0:9093,CONTROLLER://kafka102:29093'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka102:29092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'false'
      KAFKA_HEAP_OPTS: ${KAFKA_BROKER_HEAP_OPTS}
    deploy:
      resources:
        limits:
          memory: ${KAFKA_BROKER_MEM_LIMIT}
    networks:
      - kafka-platform

  kafka103:  
    image: "confluentinc/cp-kafka:${CONFLUENT_VERSION}"
    ports:
      - "9094:9094"
      - "9993:9993"
    container_name: kafka103
    environment:
      KAFKA_NODE_ID: 103
      # random cluster ID used for formatting LOG_DIR for KRaft
      CLUSTER_ID: 'xtzWWN4bTjitpL3kfd9s5g'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '101@kafka101:29093,102@kafka102:29093,103@kafka103:29093'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_JMX_PORT: 9993
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka103:29092,PLAINTEXT_HOST://localhost:9094'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka103:29092,PLAINTEXT_HOST://0.0.0.0:9094,CONTROLLER://kafka103:29093'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka103:29092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'false'      
      KAFKA_HEAP_OPTS: ${KAFKA_BROKER_HEAP_OPTS}
    deploy:
      resources:
        limits:
          memory: ${KAFKA_BROKER_MEM_LIMIT}
    networks:
      - kafka-platform

  control-center:
    image: "confluentinc/cp-enterprise-control-center:${CONFLUENT_VERSION}"
    hostname: control-center
    container_name: control-center
    depends_on:
      - kafka101
      - kafka102
      - kafka103
      - kafka-schema-registry
      - kafka-connect
      - ksqldb-server
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka101:29092,kafka103:29092,kafka103:29092'
      CONTROL_CENTER_CONNECT_CONNECT-DEFAULT_CLUSTER: 'kafka-connect:8083'
      CONTROL_CENTER_CONNECT_HEALTHCHECK_ENDPOINT: '/connectors'
      CONTROL_CENTER_KSQL_KSQLDB1_URL: "http://ksqldb-server:8088"
      CONTROL_CENTER_KSQL_KSQLDB1_ADVERTISED_URL: "http://localhost:8088"
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://kafka-schema-registry:8081"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021
    networks:
      - kafka-platform

  kafka-ui:
    container_name: kafka-ui
    image: "provectuslabs/kafka-ui:v0.7.2"
    ports:
      - 9081:8080
    depends_on:
      - kafka101
      - kafka102
      - kafka103
    environment:
      KAFKA_CLUSTERS_0_NAME: local_1
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka101:29092
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://kafka-schema-registry:8081
      KAFKA_CLUSTERS_1_NAME: local_2
      KAFKA_CLUSTERS_1_BOOTSTRAPSERVERS: kafka102:29092
      KAFKA_CLUSTERS_1_SCHEMAREGISTRY: http://kafka-schema-registry:8081
      KAFKA_CLUSTERS_2_NAME: local_3
      KAFKA_CLUSTERS_2_BOOTSTRAPSERVERS: kafka103:29092
      KAFKA_CLUSTERS_2_SCHEMAREGISTRY: http://kafka-schema-registry:8081
    networks:
      - kafka-platform

  ksqldb-server:
    image: "confluentinc/cp-ksqldb-server:${CONFLUENT_VERSION}"
    hostname: ksqldb-server
    container_name: ksqldb-server
    depends_on:
      - kafka101
      - kafka102
      - kafka103
      - kafka-connect
    ports:
      - "8088:8088"
    environment:
      KSQL_CONFIG_DIR: "/etc/ksql"
      KSQL_BOOTSTRAP_SERVERS: "kafka101:29092,kafka102:29092,kafka103:29092"
      KSQL_HOST_NAME: ksqldb-server
      KSQL_LISTENERS: "http://0.0.0.0:8088"
      KSQL_CACHE_MAX_BYTES_BUFFERING: 0
      KSQL_KSQL_SCHEMA_REGISTRY_URL: "http://kafka-schema-registry:8081"
      KSQL_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
      KSQL_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
      KSQL_KSQL_CONNECT_URL: "http://kafka-connect:8083"
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_REPLICATION_FACTOR: 1
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: 'true'
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: 'true'
    networks:
      - kafka-platform

  kafka-schema-registry:
    image: "confluentinc/cp-schema-registry:${CONFLUENT_VERSION}"
    hostname: kafka-schema-registry
    container_name: kafka-schema-registry
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka101:29092,PLAINTEXT://kafka102:29092,PLAINTEXT://kafka103:29092
      SCHEMA_REGISTRY_HOST_NAME: kafka-schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_HEAP_OPTS: ${SCHEMA_REGISTRY_HEAP_OPTS}
    depends_on:
      - kafka101
    deploy:
      resources:
        limits:
          memory: ${SCHEMA_REGISTRY_MEM_LIMIT}
    networks:
      - kafka-platform

  kafka-connect:
    image: "confluentinc/cp-kafka-connect-base:${CONFLUENT_VERSION}"
    hostname: kafka-connect
    ports:
      - "8083:8083"
    command:
      - bash
      - -c
      - |
        confluent-hub install --no-prompt confluentinc/kafka-connect-jdbc:latest
        confluent-hub install --no-prompt confluentinc/kafka-connect-datagen:latest
        confluent-hub install --no-prompt debezium/debezium-connector-mysql:latest
        confluent-hub install --no-prompt debezium/debezium-connector-mongodb:latest
        /etc/confluent/docker/run
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "kafka101:29092,kafka102:29092,kafka103:29092"
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://kafka-schema-registry:8081'
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://kafka-schema-registry:8081'
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
      CONNECT_LOG4J_ROOT_LOGLEVEL: "INFO"
      CONNECT_LOG4J_LOGGERS: "org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_PLUGIN_PATH: '/usr/share/java,/etc/kafka-connect/jars'
      KAFKA_HEAP_OPTS: ${KAFKA_CONNECT_HEAP_OPTS}
    volumes:
      - ./connectors:/etc/kafka-connect/jars/
    depends_on:
      - kafka101
      - kafka-schema-registry
    deploy:
      resources:
        limits:
          memory: ${KAFKA_CONNECT_MEM_LIMIT}
    networks:
      - kafka-platform

  ksqldb-cli:
    image: "confluentinc/cp-ksqldb-cli:${CONFLUENT_VERSION}"
    container_name: ksqldb-cli
    depends_on:
      - kafka101
      - kafka102
      - kafka103
      - kafka-connect
      - ksqldb-server
    entrypoint: /bin/sh
    tty: true
    networks:
      - kafka-platform

  ksql-datagen:
    image: "confluentinc/ksqldb-examples:${CONFLUENT_VERSION}"
    hostname: ksql-datagen
    container_name: ksql-datagen
    depends_on:
      - ksqldb-server
      - kafka101
      - kafka102
      - kafka103
      - kafka-schema-registry
      - kafka-connect
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
                       cub kafka-ready -b kafka101:29092,kafka102:29092,kafka103:29092 1 40 && \
                       echo Waiting for Confluent Schema Registry to be ready... && \
                       cub sr-ready kafka-schema-registry 8081 40 && \
                       echo Waiting a few seconds for topic creation to finish... && \
                       sleep 11 && \
                       tail -f /dev/null'"
    environment:
      KSQL_CONFIG_DIR: "/etc/ksql"
      STREAMS_BOOTSTRAP_SERVERS: kafka101:29092,kafka102:29092,kafka103:29092
      STREAMS_SCHEMA_REGISTRY_HOST: kafka-schema-registry
      STREAMS_SCHEMA_REGISTRY_PORT: 8081
    networks:
      - kafka-platform

  rest-proxy:
    image: "confluentinc/cp-kafka-rest:${CONFLUENT_VERSION}"
    depends_on:
      - kafka101
      - kafka102
      - kafka103
      - kafka-schema-registry
    ports:
      - 8082:8082
    hostname: rest-proxy
    container_name: rest-proxy
    environment:
      KAFKA_REST_HOST_NAME: rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: 'kafka101:29092,kafka102:29092,kafka103:29092'
      KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"
      KAFKA_REST_SCHEMA_REGISTRY_URL: 'http://kafka-schema-registry:8081'
    networks:
      - kafka-platform

networks:
  kafka-platform:
    name: kafka-platform
    driver: bridge